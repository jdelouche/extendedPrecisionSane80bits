<?xml version="1.0" encoding="UTF-8" ?>
<testsuite failures="0" time="0.318" errors="0" skipped="0" tests="44" name="TestSuite">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Libraries"/>
    <property name="java.vm.version" value="20.4-b02-402"/>
    <property name="awt.nativeDoubleBuffering" value="true"/>
    <property name="gopherProxySet" value="false"/>
    <property name="mrj.build" value="10M3527"/>
    <property name="java.vm.vendor" value="Apple Inc."/>
    <property name="java.vendor.url" value="http://www.apple.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/Users/jdelouche/Documents/workspace/Sane80BitsConverter"/>
    <property name="java.runtime.version" value="1.6.0_29-b11-402-10M3527"/>
    <property name="java.awt.graphicsenv" value="apple.awt.CGraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/endorsed"/>
    <property name="os.arch" value="x86_64"/>
    <property name="java.io.tmpdir" value="/var/folders/lZ/lZ8Uz+FzGEeNVMFc3LEWcU+++TI/-Tmp-/"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Sun Microsystems Inc."/>
    <property name="os.name" value="Mac OS X"/>
    <property name="classworlds.conf" value="/usr/share/java/maven-3.0.3/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="MacRoman"/>
    <property name="java.library.path" value=".:/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="50.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="10.6.8"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="user.home" value="/Users/jdelouche"/>
    <property name="user.timezone" value="Europe/Madrid"/>
    <property name="java.awt.printerjob" value="apple.awt.CPrinterJob"/>
    <property name="java.specification.version" value="1.6"/>
    <property name="file.encoding" value="MacRoman"/>
    <property name="user.name" value="jdelouche"/>
    <property name="java.class.path" value="/usr/share/java/maven-3.0.3/boot/plexus-classworlds-2.4.jar"/>
    <property name="java.vm.specification.version" value="1.0"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher package"/>
    <property name="java.specification.vendor" value="Sun Microsystems Inc."/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="apple.awt.CToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.6.0_29"/>
    <property name="java.ext.dirs" value="/Library/Java/Extensions:/System/Library/Java/Extensions:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext"/>
    <property name="sun.boot.class.path" value="/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsfd.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Frameworks/JavaVM.framework/Frameworks/JavaRuntimeSupport.framework/Resources/Java/JavaRuntimeSupport.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/laf.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/sunrsasign.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar"/>
    <property name="java.vendor" value="Apple Inc."/>
    <property name="maven.home" value="/usr/share/java/maven-3.0.3"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.apple.com/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="mrj.version" value="1060.1.6.0_29-402"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase time="0.017" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestSane80bitsByteArrayToDouble" name="sane80bits2toSane80bitsDouble"/>
  <testcase time="0.001" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestSane80bitsByteArrayToDouble" name="sane80bitsByteArayThreeQuarterToDouble"/>
  <testcase time="0.001" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestSane80bitsByteArrayToDouble" name="sane80bitsByteArray11127toBinaryString"/>
  <testcase time="0" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestSane80bitsByteArrayToDouble" name="sane80bitsByteArray11127toDouble"/>
  <testcase time="0" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestSane80bitsByteArrayToDouble" name="sane80bitsByteArray1ToDouble"/>
  <testcase time="0.049" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestSane80bitsByteArrayToDouble" name="sane80bitsByteArray22255toDouble"/>
  <testcase time="0" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestSane80bitsByteArrayToDouble" name="sane80bitsByteArray32000toDouble"/>
  <testcase time="0.001" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestSane80bitsByteArrayToDouble" name="sane80bitsByteArray44100toDouble"/>
  <testcase time="0" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestSane80bitsByteArrayToDouble" name="sane80bitsByteArray48000toDouble"/>
  <testcase time="0" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestSane80bitsByteArrayToDouble" name="sane80bitsByteArray8000toDouble"/>
  <testcase time="0.001" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestSane80bitsByteArrayToDouble" name="sane80bitsByteArrayHalftoDouble"/>
  <testcase time="0" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestSane80bitsByteArrayToDouble" name="sane80bitsByteArrayInfinityToDouble"/>
  <testcase time="0" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestSane80bitsByteArrayToDouble" name="sane80bitsByteArrayMinus11127toBinaryString"/>
  <testcase time="0.001" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestSane80bitsByteArrayToDouble" name="sane80bitsByteArrayMinus1toDouble"/>
  <testcase time="0" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestSane80bitsByteArrayToDouble" name="sane80bitsByteArrayMinus22255"/>
  <testcase time="0.003" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestSane80bitsByteArrayToDouble" name="sane80bitsByteArrayMinusInfinityToDouble"/>
  <testcase time="0.019" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestSane80bitsByteArrayToDouble" name="sane80bitsByteArrayNegativeNotaNumberToDouble"/>
  <testcase time="0.005" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestSane80bitsByteArrayToDouble" name="sane80bitsByteArrayNegativeZeroToDouble"/>
  <testcase time="0.003" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestSane80bitsByteArrayToDouble" name="sane80bitsByteArrayNotaNumberToDouble"/>
  <testcase time="0.002" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestSane80bitsByteArrayToDouble" name="sane80bitsByteArrayPositiveZeroToDouble"/>
  <testcase time="0.002" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestNullConversion64bits" name="nullConversion64bits0"/>
  <testcase time="0.001" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestNullConversion64bits" name="nullConversion64bits0point1"/>
  <testcase time="0.002" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestNullConversion64bits" name="nullConversion64bits1"/>
  <testcase time="0" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestNullConversion64bits" name="nullConversion64bits16"/>
  <testcase time="0.181" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestNullConversion64bits" name="nullConversion64bits1to100"/>
  <testcase time="0" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestNullConversion64bits" name="nullConversion64bits2"/>
  <testcase time="0" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestNullConversion64bits" name="nullConversion64bits3"/>
  <testcase time="0" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestNullConversion64bits" name="nullConversion64bits4"/>
  <testcase time="0.001" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestNullConversion64bits" name="nullConversion64bitsNaN"/>
  <testcase time="0" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestNullConversion64bits" name="nullConversion64bitsPI"/>
  <testcase time="0" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestDoubleToSane80BitsByteArray" name="double0point1toByteArray"/>
  <testcase time="0" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestDoubleToSane80BitsByteArray" name="double11127toSane80bitsByteArray"/>
  <testcase time="0.001" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestDoubleToSane80BitsByteArray" name="double1point5toByteArray"/>
  <testcase time="0" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestDoubleToSane80BitsByteArray" name="double2toByteArray"/>
  <testcase time="0.025" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestDoubleToSane80BitsByteArray" name="double48000toSane80bitsByteArray"/>
  <testcase time="0.001" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestDoubleToSane80BitsByteArray" name="double8000toByteArray"/>
  <testcase time="0" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestDoubleToSane80BitsByteArray" name="doubleHalfToSane80bitsByteArray"/>
  <testcase time="0" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestDoubleToSane80BitsByteArray" name="doubleInfinityToSane80bitsByteArray"/>
  <testcase time="0" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestDoubleToSane80BitsByteArray" name="doubleMinus1toByteArray"/>
  <testcase time="0.001" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestDoubleToSane80BitsByteArray" name="doubleNaNtoSane80bitsByteArray"/>
  <testcase time="0" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestDoubleToSane80BitsByteArray" name="doubleNegative48000toSane80bitsByteArray"/>
  <testcase time="0" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestDoubleToSane80BitsByteArray" name="doubleNegativeInfinityToSane80bitsByteArray"/>
  <testcase time="0" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestDoubleToSane80BitsByteArray" name="doubleOneToSane80bitsByteArray"/>
  <testcase time="0" classname="org.sane80bits.converter.saneExtendedPrecision.tests.TestDoubleToSane80BitsByteArray" name="doubleTo11127toSane80bitsByteArray"/>
</testsuite>